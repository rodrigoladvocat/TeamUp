// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        Int     @default(autoincrement()) @id
  name      String
  email     String  @unique
  password  String
  imgUrl    String
  isManager Boolean // may be redundant*
  role      String
  age       Int
  telephone String
  cpf       String  @unique
  street    String
  number    String
  city      String
  state     String
  zipCode   String

  selfEvaluation       SelfEvaluation[] 

  othersEvaluator      OthersEvaluation [] @relation("OthersEvaluator")
  othersEvaluated      OthersEvaluation [] @relation("OthersEvaluated")

  tuningEvaluator      Tuning []           @relation("TuningEvaluator")
  tuningEvaluated      Tuning []           @relation("TuningEvaluated")
}

model Cycle {
  id          Int      @default(autoincrement()) @id
  cycleName   String
  initialDate DateTime @default(now())
  finalDate   DateTime
  lastUpdated DateTime

  selfEvaluation    SelfEvaluation[]
  othersEvaluation  OthersEvaluation []
  tuning            Tuning []
}

model SelfEvaluation {
  id          Int     @default(autoincrement()) @id
  userId      Int
  cycleId     Int

  ownershipMentalityGrade   Int
  ownershipMentalityComment String

  learningAgilityGrade   Int
  learningAgilityComment String

  resilienceAdversityGrade   Int
  resilienceAdversityComment String

  teamworkGrade   Int
  teamworkComment String

  outOfTheBoxThinkingBehavioralGrade   Int
  outOfTheBoxThinkingBehavioralComment String

  deliveringQualityGrade   Int
  deliveringQualityComment String

  meetingDeadlinesGrade   Int
  meetingDeadlinesComment String

  doingMoreWithLessGrade   Int
  doingMoreWithLessComment String

  outOfTheBoxThinkingExecutionGrade   Int
  outOfTheBoxThinkingExecutionComment String

  user      User @relation(fields: [userId], references: [id])
  cycle     Cycle @relation(fields: [cycleId], references: [id]) 
}

model OthersEvaluation {
  id          Int     @default(autoincrement()) @id
  evaluatorUserId Int
  evaluatedUserId Int
  cycleId     Int
  
  grade       Int
  comment     String

  evaluator User @relation("OthersEvaluator", fields: [evaluatorUserId], references: [id])
  evaluated User @relation("OthersEvaluated", fields: [evaluatedUserId], references: [id])
  cycle     Cycle @relation(fields: [cycleId], references: [id])
}

model Tuning {
  id                 Int @default(autoincrement()) @id
  collaboratorUserId Int
  managerUserId      Int
  cycleId            Int
  grade              Int

  evaluator User @relation("TuningEvaluator", fields: [managerUserId], references: [id])
  evaluated User @relation("TuningEvaluated", fields: [collaboratorUserId], references: [id])
  cycle     Cycle @relation(fields: [cycleId], references: [id])
}
